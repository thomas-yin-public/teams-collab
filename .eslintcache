[{"C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\index.js":"1","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\App.js":"2","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Auth\\Login.js":"3","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\api\\request.js":"4","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\api\\backendURL.js":"5","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Auth\\PrivateRoute.js":"6","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Groups\\GroupPage.js":"7","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Tasks\\TaskPage.js":"8","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Chat\\ChatPage.js":"9","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Loading\\ResourcePreLoad.js":"10","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\NavigationBar\\NavigationBar.js":"11","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Auth\\Logout.js":"12","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\api\\common.js":"13","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Chat\\ChatDisplay.js":"14","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Groups\\GroupDetail.js":"15","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Loading\\GroupLoading.js":"16","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\utilities\\betterDate.js":"17","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Groups\\TaskBox.js":"18","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Common\\ToolBox.js":"19","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Groups\\MemberBox.js":"20","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\api\\post.js":"21","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\api\\delete.js":"22","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Common\\UserTile.js":"23","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Loading\\LoadingIcon.js":"24","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Memo\\MemoPage.js":"25","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Groups\\GroupCreateForm.js":"26","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Chat\\ChatTile.js":"27"},{"size":218,"mtime":1612773644183,"results":"28","hashOfConfig":"29"},{"size":2396,"mtime":1616062899979,"results":"30","hashOfConfig":"29"},{"size":2839,"mtime":1616064149734,"results":"31","hashOfConfig":"29"},{"size":2020,"mtime":1613831768686,"results":"32","hashOfConfig":"29"},{"size":151,"mtime":1616144185713,"results":"33","hashOfConfig":"29"},{"size":245,"mtime":1612850666739,"results":"34","hashOfConfig":"29"},{"size":3183,"mtime":1616053003621,"results":"35","hashOfConfig":"29"},{"size":130,"mtime":1612780585136,"results":"36","hashOfConfig":"29"},{"size":2710,"mtime":1616138769570,"results":"37","hashOfConfig":"29"},{"size":3118,"mtime":1616139050582,"results":"38","hashOfConfig":"29"},{"size":1652,"mtime":1616053355278,"results":"39","hashOfConfig":"29"},{"size":118,"mtime":1616051589247,"results":"40","hashOfConfig":"29"},{"size":78,"mtime":1612851345312,"results":"41","hashOfConfig":"29"},{"size":3843,"mtime":1616067741711,"results":"42","hashOfConfig":"29"},{"size":3732,"mtime":1615989244835,"results":"43","hashOfConfig":"29"},{"size":1684,"mtime":1616063359688,"results":"44","hashOfConfig":"29"},{"size":656,"mtime":1616067177393,"results":"45","hashOfConfig":"29"},{"size":6174,"mtime":1613746834645,"results":"46","hashOfConfig":"29"},{"size":1601,"mtime":1615204516680,"results":"47","hashOfConfig":"29"},{"size":7837,"mtime":1615181660979,"results":"48","hashOfConfig":"29"},{"size":2977,"mtime":1616120875419,"results":"49","hashOfConfig":"29"},{"size":816,"mtime":1613747290179,"results":"50","hashOfConfig":"29"},{"size":3034,"mtime":1616052574997,"results":"51","hashOfConfig":"29"},{"size":1110,"mtime":1616063596139,"results":"52","hashOfConfig":"29"},{"size":130,"mtime":1616035592866,"results":"53","hashOfConfig":"29"},{"size":2217,"mtime":1616050959284,"results":"54","hashOfConfig":"29"},{"size":1761,"mtime":1616124036065,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"ul5j5l",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\index.js",[],["118","119"],"C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\App.js",[],"C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Auth\\Login.js",[],"C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\api\\request.js",[],"C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\api\\backendURL.js",[],"C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Auth\\PrivateRoute.js",[],"C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Groups\\GroupPage.js",["120"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link, Route, useRouteMatch } from \"react-router-dom\";\r\nimport GroupLoading from \"../Loading/GroupLoading\";\r\nimport { GroupContext } from \"../Loading/ResourcePreLoad\";\r\nimport GroupCreateForm from \"./GroupCreateForm\";\r\n\r\nfunction GroupPage() {\r\n  const groupList = useContext(GroupContext);\r\n\r\n  let { url, path } = useRouteMatch();\r\n\r\n  const [filteredGroupList, setFilteredGroupList] = useState(groupList);\r\n  const [filterGroupInput, setFilterGroupInput] = useState(\"\");\r\n\r\n  const [showGroupCreateForm, setShowGroupCreateForm] = useState(false);\r\n\r\n  const filterGroupList = () => {\r\n    let newList = [];\r\n    for (let group of groupList) {\r\n      if (group.groupName.match(new RegExp(filterGroupInput, \"gmi\")))\r\n        newList.push(group);\r\n    }\r\n\r\n    setFilteredGroupList(newList);\r\n  };\r\n\r\n  useEffect(() => {\r\n    filterGroupList();\r\n  }, [filterGroupInput, groupList]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {showGroupCreateForm && (\r\n        <GroupCreateForm showForm={setShowGroupCreateForm} />\r\n      )}\r\n      <div className=\"row m-0 p-0 h-100\">\r\n        <div\r\n          className=\"col-md-2 p-0 m-0 h-100 shadow-sm border-end d-flex flex-column\"\r\n          style={{ minWidth: \"195px\" }}\r\n        >\r\n          <input\r\n            className=\"form-control border-0 h-50px\"\r\n            onChange={(e) => setFilterGroupInput(e.target.value)}\r\n            placeholder=\"Search Group\"\r\n          />\r\n          <div className=\"fw-bold d-flex flex-column overflowY\">\r\n            <div className=\"my-2 p-3\">Quick Links</div>\r\n            {groupList.map((group) => (\r\n              <Link\r\n                key={group._id}\r\n                to={`${url}/${group._id}`}\r\n                className=\"px-3 py-1 border-bottom w-100 text-center bg-white\"\r\n              >\r\n                {group.groupName}\r\n              </Link>\r\n            ))}\r\n          </div>\r\n          <button\r\n            className=\"mt-auto btn btn-primary rounded-0 w-100\"\r\n            onClick={() => setShowGroupCreateForm(true)}\r\n          >\r\n            Create Group\r\n          </button>\r\n        </div>\r\n        <div className=\"col-md pt-3 bg-white px-5 shadow-left\">\r\n          <Route exact path={path}>\r\n            <h1>Groups</h1>\r\n            <div className=\"d-flex flex-wrap\">\r\n              {filteredGroupList.map((group) => (\r\n                <Link\r\n                  key={group._id}\r\n                  to={`${url}/${group._id}`}\r\n                  className=\"text-white me-3 mb-3 more-rounded\"\r\n                >\r\n                  <div\r\n                    className=\"btn d-flex flex-column blue-trans-bg blue-text fw-bold \"\r\n                    style={{ width: \"170px\" }}\r\n                  >\r\n                    {\" \"}\r\n                    <i className=\"bi bi-folder-fill fs-1\"></i>\r\n                    {group.groupName}\r\n                  </div>\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </Route>\r\n          <Route path={`${path}/:groupId`}>\r\n            <GroupLoading />\r\n          </Route>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default GroupPage;\r\n","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Tasks\\TaskPage.js",[],"C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Chat\\ChatPage.js",["121","122","123","124"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { ChatContext } from \"../Loading/ResourcePreLoad\";\r\nimport ChatDisplay from \"./ChatDisplay\";\r\nimport { ChatIdContext, UserIdContext } from \"../../App\";\r\nimport { betterTime } from \"../../utilities/betterDate\";\r\nimport ChatTile from \"./ChatTile\";\r\n\r\nfunction ChatPage() {\r\n  const userId = useContext(UserIdContext);\r\n  const { externChatId, setExternChatId } = useContext(ChatIdContext);\r\n\r\n  const { chatData } = useContext(ChatContext);\r\n  const [sortedChatList, setSortedChatList] = useState([]);\r\n  const [filteredChatData, setFilteredChatData] = useState([]);\r\n  const [filterInput, setFilterInput] = useState(\"\");\r\n  const [selectedContactId, setSelectedContactId] = useState(\r\n    externChatId?.contactUser._id\r\n  );\r\n\r\n  const filterContact = () => {\r\n    let filteredList = sortedChatList.filter((chatId) =>\r\n      chatData[chatId].contactUser.username.match(\r\n        new RegExp(filterInput, \"gmi\")\r\n      )\r\n    );\r\n    setFilteredChatData([...filteredList]);\r\n  };\r\n\r\n  const makeSortedChatList = () => {\r\n    let sortedList = Object.keys(chatData);\r\n    sortedList.sort((x, y) => {\r\n      let xdate = new Date(chatData[x].messages[0].sendAt);\r\n      let ydate = new Date(chatData[y].messages[0].sendAt);\r\n      if (xdate > ydate) return -1;\r\n      else if (xdate < ydate) return 1;\r\n      return 0;\r\n    });\r\n    setSortedChatList([...sortedList]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    makeSortedChatList();\r\n  }, [chatData]);\r\n\r\n  useEffect(() => {\r\n    filterContact();\r\n  }, [sortedChatList, filterInput]);\r\n\r\n  return (\r\n    <div className=\"row p-0 m-0 h-100\">\r\n      <div\r\n        className=\"col-md-2 p-0 m-0 h-100 border-end\"\r\n        style={{ minWidth: \"195px\" }}\r\n      >\r\n        <input\r\n          className=\"form-control border-0 h-50px\"\r\n          placeholder=\"Search User\"\r\n          onChange={(e) => setFilterInput(e.target.value)}\r\n        />\r\n        <div className=\"border-top\">\r\n          {filteredChatData.map((contactId) => (\r\n            <ChatTile\r\n              key={contactId}\r\n              contact={chatData[contactId]}\r\n              setSelectedContactId={setSelectedContactId}\r\n              userId={userId}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      {selectedContactId ? (\r\n        <ChatDisplay\r\n          contactUserChatData={\r\n            chatData[selectedContactId] === undefined\r\n              ? externChatId\r\n              : chatData[selectedContactId]\r\n          }\r\n          className=\"col-md h-100 bg-white shadow-left\"\r\n        />\r\n      ) : (\r\n        <div className=\"col-md h-100 bg-white shadow-left\" />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatPage;\r\n","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Loading\\ResourcePreLoad.js",["125","126","127"],"import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport backendURL from \"../../api/backendURL\";\r\nimport {\r\n  requestUserContactList,\r\n  requestUserGroupList,\r\n} from \"../../api/request\";\r\nimport { UserIdContext } from \"../../App\";\r\nimport LoadingIcon from \"./LoadingIcon\";\r\n\r\nexport const GroupContext = createContext(\"\");\r\nexport const ChatContext = createContext(\"\");\r\nexport const TaskContext = createContext(\"\");\r\n\r\nexport const ForceReload = createContext(\"\");\r\n\r\nexport const WebSocketContext = createContext();\r\n\r\nfunction ResourcePreLoad({ children }) {\r\n  const userId = useContext(UserIdContext);\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const [groupData, setGroupData] = useState();\r\n  const [chatData, setChatData] = useState();\r\n  const [taskData, setTaskData] = useState();\r\n\r\n  const ws = new WebSocket(\"ws://localhost:8000\");\r\n  ws.onopen = () => {\r\n    ws.send(JSON.stringify({ userId, action: \"REGISTER\" }));\r\n  };\r\n\r\n  ws.onmessage = (data) => {\r\n    let json_data = JSON.parse(data.data);\r\n    console.log(json_data);\r\n    unsafeMessageUpdate(json_data);\r\n  };\r\n\r\n  const unsafeMessageUpdate = ({ chatId, userId: senderId, message }) => {\r\n    if (chatData[chatId]) {\r\n      console.log(123);\r\n      let newDataList = chatData;\r\n      newDataList[chatId].messages = [\r\n        { _id: new Date().getTime(), senderId, message },\r\n        ...newDataList[chatId].messages,\r\n      ];\r\n      setChatData({ ...newDataList });\r\n    } else {\r\n      getUserContactList();\r\n    }\r\n  };\r\n\r\n  const getUserGroupList = async () => {\r\n    return requestUserGroupList().then((res) => setGroupData(res));\r\n  };\r\n\r\n  const getUserContactList = async () => {\r\n    return requestUserContactList().then((res) => {\r\n      let hashedContactData = {};\r\n      for (let contact of res) {\r\n        contact.messages = contact.messages.reverse();\r\n        // hashedContactData[contact._id] = contact;\r\n        hashedContactData[contact.contactUser._id] = contact;\r\n      }\r\n      setChatData({ ...hashedContactData });\r\n    });\r\n  };\r\n\r\n  const getData = async () => {\r\n    await getUserContactList();\r\n    await getUserGroupList();\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <ForceReload.Provider value={getData}>\r\n      <WebSocketContext.Provider value={ws}>\r\n        <GroupContext.Provider value={groupData}>\r\n          <ChatContext.Provider value={{ chatData, getUserContactList }}>\r\n            <TaskContext.Provider value={taskData}>\r\n              {isLoading ? (\r\n                <div\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    height: \"100vh\",\r\n                    width: \"100vw\",\r\n                  }}\r\n                >\r\n                  <LoadingIcon />\r\n                </div>\r\n              ) : (\r\n                children\r\n              )}\r\n            </TaskContext.Provider>\r\n          </ChatContext.Provider>\r\n        </GroupContext.Provider>\r\n      </WebSocketContext.Provider>\r\n    </ForceReload.Provider>\r\n  );\r\n}\r\n\r\nexport default ResourcePreLoad;\r\n","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\NavigationBar\\NavigationBar.js",["128","129"],"import React, { useState } from \"react\";\r\n\r\nimport { Link, useLocation, useRouteMatch } from \"react-router-dom\";\r\nimport Logout from \"../Auth/Logout\";\r\n\r\nconst pages = [\r\n  {\r\n    name: \"Groups\",\r\n    icon: <i className=\"bi bi-collection\"></i>,\r\n    link: \"/groups\",\r\n  },\r\n  {\r\n    name: \"Chats\",\r\n    icon: <i className=\"bi bi-chat-right-text\"></i>,\r\n    link: \"/chats\",\r\n  },\r\n  {\r\n    name: \"Memo\",\r\n    icon: <i className=\"bi bi-journal-bookmark-fill\"></i>,\r\n    link: \"/memo\",\r\n  },\r\n];\r\n\r\nfunction NavigationBar({ className = \"\", style = \"\" }) {\r\n  const [selectedPageLink, setSelectedPageLink] = useState(\"\");\r\n  let location = useLocation();\r\n  return (\r\n    <div\r\n      className={`${className} vh-100 d-flex flex-column justify-content-center  border-end px-2`}\r\n      style={{ ...style }}\r\n    >\r\n      {pages.map((page) => (\r\n        <Link\r\n          to={page.link}\r\n          key={page.link}\r\n          onClick={() => setSelectedPageLink(page.link)}\r\n          className={`fs-5 d-flex flex-column justify-content-center my-1 p-1 ${\r\n            page.link === \"/\" + location.pathname.split(\"/\")[1]\r\n              ? \"selected-tag\"\r\n              : \"text-muted\"\r\n          }`}\r\n        >\r\n          <div className=\"m-auto text-center fs-4\">\r\n            <div>{page.icon}</div>\r\n            <div className=\"fs-6\">{page.name}</div>\r\n          </div>\r\n        </Link>\r\n      ))}\r\n      <div className=\"pt-cursor text-center fs-4 mt-auto mb-3\" onClick={() => Logout()}>\r\n        <div><i className=\"bi bi-box-arrow-right\"></i></div>\r\n        <div className=\"fs-6\">Logout</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavigationBar;\r\n","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Auth\\Logout.js",[],"C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\api\\common.js",[],"C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Chat\\ChatDisplay.js",[],"C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Groups\\GroupDetail.js",[],"C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Loading\\GroupLoading.js",["130"],"import React, { useState, useEffect, createContext } from \"react\";\r\nimport GroupDetail from \"../Groups/GroupDetail\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport { requestGroupDetail, requestGroupMemebrs } from \"../../api/request\";\r\nimport LoadingIcon from \"./LoadingIcon\";\r\n\r\nexport const GroupUpdateContext = createContext();\r\n\r\nfunction GroupLoading({ children }) {\r\n  let { groupId } = useParams();\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const [groupInfo, setGroupInfo] = useState();\r\n  const [groupMemberList, setGroupMemberList] = useState([]);\r\n\r\n  const getGroupDetail = async () => {\r\n    return requestGroupDetail(groupId).then((res) => {\r\n      setGroupInfo(res);\r\n    });\r\n  };\r\n\r\n  const getGroupMemberList = async () => {\r\n    return requestGroupMemebrs(groupId).then((res) => {\r\n      setGroupMemberList(res);\r\n    });\r\n  };\r\n\r\n  const loadingResource = async () => {\r\n    await getGroupDetail();\r\n    await getGroupMemberList();\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadingResource();\r\n  }, [groupId]);\r\n\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        <div\r\n          className=\"d-flex flex-column justify-content-center vh-100 overflow-hidden\"\r\n          style={{\r\n            height: \"100%\"\r\n          }}\r\n        >\r\n          <LoadingIcon />\r\n        </div>\r\n      ) : (\r\n        <GroupUpdateContext.Provider\r\n          value={{ getGroupDetail, getGroupMemberList }}\r\n        >\r\n          <GroupDetail\r\n            groupInfo={groupInfo}\r\n            groupMemberList={groupMemberList}\r\n          />\r\n        </GroupUpdateContext.Provider>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GroupLoading;\r\n","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\utilities\\betterDate.js",[],"C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Groups\\TaskBox.js",[],"C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Common\\ToolBox.js",[],"C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Groups\\MemberBox.js",["131","132","133","134"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { deleteGroupMember } from \"../../api/delete\";\r\nimport { postGroupMember } from \"../../api/post\";\r\nimport { requestAllUserBasicInfo } from \"../../api/request\";\r\nimport ToolBox from \"../Common/ToolBox\";\r\nimport { GroupUpdateContext } from \"../Loading/GroupLoading\";\r\n\r\nfunction MemberBox({ memberList }) {\r\n  const [selectedComponent, setSelectedComponent] = useState(\"\");\r\n\r\n  const itemList = [\r\n    {\r\n      name: \"Add Member\",\r\n      action: () =>\r\n        setSelectedComponent(<AddUserForm memberList={memberList} />),\r\n    },\r\n    {\r\n      name: \"Remove Member\",\r\n      action: () =>\r\n        setSelectedComponent(<RemoveMemberForm memberList={memberList} />),\r\n    },\r\n  ];\r\n  return (\r\n    <React.Fragment>\r\n      <ToolBox unqiueId=\"meber-box\" itemList={itemList} />\r\n      {selectedComponent ? (\r\n        <div className=\"custom-modal m-auto\">\r\n          <div\r\n            className=\"d-flex flex-column bg-white border shadow-sm more-rounded\"\r\n            style={{ minWidth: \"50vw\" }}\r\n          >\r\n            <button\r\n              className=\"btn m-0 p-0 d-flex flex-row-reverse fs-2 pe-2\"\r\n              onClick={() => setSelectedComponent(\"\")}\r\n            >\r\n              <i className=\"bi bi-x\"></i>\r\n            </button>\r\n            {selectedComponent}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction RemoveMemberForm({ memberList: _memberList }) {\r\n  let { groupId } = useParams();\r\n  let { getGroupMemberList } = useContext(GroupUpdateContext);\r\n  const [memberList, setMemberList] = useState(_memberList);\r\n\r\n  const [submitResponse, setSubmitResponse] = useState(\"\");\r\n\r\n  const [showConfirmBox, setShowConfirmBox] = useState(false);\r\n  const [selectedMemberId, setSelectedMemberId] = useState(\"\");\r\n\r\n  const removeMember = async () => {\r\n    deleteGroupMember({ groupId, memberId: selectedMemberId }).then((res) => {\r\n      if (res.success) {\r\n        setSubmitResponse(<div className=\"alert alert-success\">Success!</div>);\r\n        getGroupMemberList();\r\n      } else {\r\n        setSubmitResponse(\r\n          <div className=\"alert alert-danger\">\r\n            Something wrong with the connection. Please try to submit again.\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(_memberList);\r\n    setMemberList(_memberList);\r\n  }, [_memberList]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {showConfirmBox && (\r\n        <div className=\"d-flex flex-column custom-modal\">\r\n          <h3>Are you sure to delete this user?</h3>\r\n          <div className=\"row mt-3\">\r\n            <button\r\n              style={{ width: \"20vw\" }}\r\n              className=\"col-md btn btn-danger\"\r\n              onClick={() => {\r\n                removeMember();\r\n                setShowConfirmBox(false);\r\n              }}\r\n            >\r\n              Yes\r\n            </button>\r\n            <button\r\n              style={{ width: \"20vw\" }}\r\n              className=\"col-md btn btn-primary ms-2\"\r\n              onClick={() => setShowConfirmBox(false)}\r\n            >\r\n              No\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"px-5\">\r\n        <h1>Delete User</h1>\r\n        {submitResponse}\r\n        <div className=\"\" style={{ height: \"60vh\", msOverflowY: \"auto\" }}>\r\n          {memberList.map((member, index) => (\r\n            <div key={member._id} className=\"row p-0 m-0 py-1\">\r\n              <div className=\"col-md p-0 m-0\">\r\n                #{index + 1} {member.username}\r\n              </div>\r\n              <button\r\n                className=\"btn btn-danger col-md-2\"\r\n                onClick={() => {\r\n                  setSelectedMemberId(member._id);\r\n                  setShowConfirmBox(true);\r\n                }}\r\n              >\r\n                Remove\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction AddUserForm({ memberList }) {\r\n  let { groupId } = useParams();\r\n  let { getGroupMemberList } = useContext(GroupUpdateContext);\r\n  const [userSuggestList, setUserSuggestList] = useState([]);\r\n\r\n  const [submitResponse, setSubmitResponse] = useState(\"\");\r\n  const [userSuggestFilterList, setUserSuggestFilterList] = useState([]);\r\n  const [filterInput, setFilterInput] = useState(\"\");\r\n\r\n  const addMember = async (e, memberId) => {\r\n    e.target.innerText = \"Processing\";\r\n    postGroupMember({ groupId, memberId }).then((res) => {\r\n      if (res.success) {\r\n        getGroupMemberList();\r\n        e.target.innerText = \"✔\";\r\n        e.target.className = e.target.className.replace(\r\n          \"btn-primary\",\r\n          \"btn-success\"\r\n        );\r\n        e.target.disabled = true;\r\n      } else {\r\n        e.target.innerText = \"Add\";\r\n      }\r\n    });\r\n  };\r\n\r\n  const getUserSuggestion = async () => {\r\n    requestAllUserBasicInfo().then((res) => {\r\n      let userHash = {};\r\n      for (let user of memberList) {\r\n        userHash[user._id] = 1;\r\n      }\r\n      let list = res.filter((user) => !userHash[user._id]);\r\n      setUserSuggestList(list);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (memberList) getUserSuggestion();\r\n  }, [memberList]);\r\n\r\n  useEffect(() => {\r\n    setUserSuggestFilterList(userSuggestList);\r\n  }, [userSuggestList]);\r\n\r\n  useEffect(() => {\r\n    let newList = userSuggestList?.filter((user) =>\r\n      user.email.match(new RegExp(`${filterInput}`, \"gmi\"))\r\n    );\r\n    setUserSuggestFilterList(newList);\r\n  }, [filterInput]);\r\n\r\n  return (\r\n    <div className=\"p-5\" style={{ width: \"50vw\", height: \"80vh\" }}>\r\n      <h1>Add Member</h1>\r\n      <input\r\n        className=\"form-control\"\r\n        value={filterInput}\r\n        placeholder=\"Type the user's email to search...\"\r\n        onChange={(e) => setFilterInput(e.target.value)}\r\n      ></input>\r\n      <div className=\"\">\r\n        <div className=\"row p-1\">\r\n          <div className=\"col-md\">Username</div>\r\n          <div className=\"col-md\">Email address</div>\r\n          <div className=\"col-md-2\"></div>\r\n        </div>\r\n        <div\r\n          className=\"m-0 p-0\"\r\n          style={{ height: \"50vh\", overflowX: \"hidden\", overflowY: \"auto\" }}\r\n        >\r\n          {userSuggestFilterList.map((user) => (\r\n            <div\r\n              key={user._id}\r\n              className=\"row mt-1 border more-rounded\"\r\n            >\r\n              <div className=\"col-md\">{user.username}</div>\r\n              <div className=\"col-md\">{user.email}</div>\r\n              <div className=\"col-md-2\">\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={(e) => addMember(e, user._id)}\r\n                >\r\n                  Add\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"row\">\r\n        <div className=\"col-md\">Username</div>\r\n        <div className=\"col-md\">Email address</div>\r\n        <div className=\"col-md-2\"></div>\r\n      </div> */}\r\n      {/* <div className=\"m-0 p-0\" style={{ height: \"50vh\", overflowY: \"auto\" }}>\r\n        {userSuggestFilterList.map((user) => (\r\n          <div key={user._id} className=\"row m-0 p-0 mt-4 border more-rounded\" style={{height: \"\"}}>\r\n            <div className=\"col-md p-0 m-0\">{user.username}</div>\r\n            <div className=\"col-md p-0 m-0\">{user.email}</div>\r\n            <div className=\"col-md-2 p-0 m-0\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={(e) => addMember(e, user._id)}\r\n              >\r\n                Add\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MemberBox;\r\n","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\api\\post.js",[],"C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\api\\delete.js",[],"C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Common\\UserTile.js",["135","136"],"import React, { useCallback, useContext, useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { ChatIdContext, UserIdContext } from \"../../App\";\r\n\r\nfunction UserTile({ userInfo }) {\r\n  const userId = useContext(UserIdContext);\r\n  const { externChatId, setExternChatId } = useContext(ChatIdContext);\r\n  const [showCard, setShowCard] = useState(false);\r\n\r\n  const iconTileRef = useRef(null);\r\n  const popupRef = useRef(null);\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        className=\"row p-1 w-100 hover-bg pt-cursor\"\r\n        ref={iconTileRef}\r\n        onClick={(e) => {\r\n          setShowCard(true);\r\n        }}\r\n      >\r\n        <div\r\n          className=\"d-flex justify-content-center ms-3 col-1 fw-bold bg-white border\"\r\n          style={{ borderRadius: \"100vh\" }}\r\n        >\r\n          {userInfo.username[0].toUpperCase()}\r\n        </div>\r\n        <div className=\"col\">{userInfo.username}</div>\r\n      </div>\r\n      {showCard && (\r\n        <div\r\n          ref={popupRef}\r\n          onClick={(e) => {\r\n            if (e.target === popupRef.current) setShowCard(false);\r\n          }}\r\n          style={{\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            bottom: 0,\r\n            right: 0,\r\n            width: \"100vw\",\r\n            height: \"100vh\",\r\n          }}\r\n        >\r\n          <div\r\n            className=\"bg-white more-rounded shadow border p-2\"\r\n            style={{\r\n              minWidth: \"200px\",\r\n              height: \"150px\",\r\n              position: \"absolute\",\r\n              left:\r\n                iconTileRef.current.getBoundingClientRect().x - 200 < 0\r\n                  ? iconTileRef.current.getBoundingClientRect().x +\r\n                    iconTileRef.current.getBoundingClientRect().width\r\n                  : iconTileRef.current.getBoundingClientRect().x - 200,\r\n              top:\r\n                iconTileRef.current.getBoundingClientRect().y + 150 >=\r\n                window.innerHeight\r\n                  ? iconTileRef.current.getBoundingClientRect().y - 110\r\n                  : iconTileRef.current.getBoundingClientRect().y,\r\n            }}\r\n          >\r\n            <h5>{userInfo.username}</h5>\r\n            <span>Email: {userInfo.email}</span>\r\n            {userInfo._id !== userId && (\r\n              <React.Fragment>\r\n                <hr></hr>\r\n                <div>\r\n                  <button\r\n                    className=\"btn-primary btn more-rounded w-100\"\r\n                    onClick={() => {\r\n                      setExternChatId({\r\n                        contactUser: userInfo,\r\n                        messages: [],\r\n                      });\r\n                      history.push(\"/chats\");\r\n                    }}\r\n                  >\r\n                    Chat\r\n                  </button>\r\n                </div>\r\n              </React.Fragment>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default UserTile;\r\n","C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Loading\\LoadingIcon.js",[],"C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Memo\\MemoPage.js",[],"C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Groups\\GroupCreateForm.js",[],"C:\\Users\\akimi\\Desktop\\Work\\_Project\\db_trying\\frontend\\src\\components\\Chat\\ChatTile.js",[],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":29,"column":6,"nodeType":"143","endLine":29,"endColumn":35,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":5,"column":10,"nodeType":"147","messageId":"148","endLine":5,"endColumn":20},{"ruleId":"145","severity":1,"message":"149","line":10,"column":25,"nodeType":"147","messageId":"148","endLine":10,"endColumn":40},{"ruleId":"141","severity":1,"message":"150","line":43,"column":6,"nodeType":"143","endLine":43,"endColumn":16,"suggestions":"151"},{"ruleId":"141","severity":1,"message":"152","line":47,"column":6,"nodeType":"143","endLine":47,"endColumn":35,"suggestions":"153"},{"ruleId":"145","severity":1,"message":"154","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":18},{"ruleId":"145","severity":1,"message":"155","line":25,"column":20,"nodeType":"147","messageId":"148","endLine":25,"endColumn":31},{"ruleId":"141","severity":1,"message":"156","line":76,"column":6,"nodeType":"143","endLine":76,"endColumn":8,"suggestions":"157"},{"ruleId":"145","severity":1,"message":"158","line":3,"column":29,"nodeType":"147","messageId":"148","endLine":3,"endColumn":42},{"ruleId":"145","severity":1,"message":"159","line":25,"column":10,"nodeType":"147","messageId":"148","endLine":25,"endColumn":26},{"ruleId":"141","severity":1,"message":"160","line":38,"column":6,"nodeType":"143","endLine":38,"endColumn":15,"suggestions":"161"},{"ruleId":"145","severity":1,"message":"162","line":136,"column":10,"nodeType":"147","messageId":"148","endLine":136,"endColumn":24},{"ruleId":"145","severity":1,"message":"163","line":136,"column":26,"nodeType":"147","messageId":"148","endLine":136,"endColumn":43},{"ruleId":"141","severity":1,"message":"164","line":170,"column":6,"nodeType":"143","endLine":170,"endColumn":18,"suggestions":"165"},{"ruleId":"141","severity":1,"message":"166","line":181,"column":6,"nodeType":"143","endLine":181,"endColumn":19,"suggestions":"167"},{"ruleId":"145","severity":1,"message":"168","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":28},{"ruleId":"145","severity":1,"message":"169","line":7,"column":11,"nodeType":"147","messageId":"148","endLine":7,"endColumn":23},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filterGroupList'. Either include it or remove the dependency array.","ArrayExpression",["172"],"no-unused-vars","'betterTime' is defined but never used.","Identifier","unusedVar","'setExternChatId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'makeSortedChatList'. Either include it or remove the dependency array.",["173"],"React Hook useEffect has a missing dependency: 'filterContact'. Either include it or remove the dependency array.",["174"],"'backendURL' is defined but never used.","'setTaskData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["175"],"'useRouteMatch' is defined but never used.","'selectedPageLink' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadingResource'. Either include it or remove the dependency array.",["176"],"'submitResponse' is assigned a value but never used.","'setSubmitResponse' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUserSuggestion'. Either include it or remove the dependency array.",["177"],"React Hook useEffect has a missing dependency: 'userSuggestList'. Either include it or remove the dependency array.",["178"],"'useCallback' is defined but never used.","'externChatId' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},"Update the dependencies array to be: [filterGroupInput, filterGroupList, groupList]",{"range":"193","text":"194"},"Update the dependencies array to be: [chatData, makeSortedChatList]",{"range":"195","text":"196"},"Update the dependencies array to be: [sortedChatList, filterInput, filterContact]",{"range":"197","text":"198"},"Update the dependencies array to be: [getData]",{"range":"199","text":"200"},"Update the dependencies array to be: [groupId, loadingResource]",{"range":"201","text":"202"},"Update the dependencies array to be: [getUserSuggestion, memberList]",{"range":"203","text":"204"},"Update the dependencies array to be: [filterInput, userSuggestList]",{"range":"205","text":"206"},[924,953],"[filterGroupInput, filterGroupList, groupList]",[1496,1506],"[chatData, makeSortedChatList]",[1560,1589],"[sortedChatList, filterInput, filterContact]",[2251,2253],"[getData]",[1063,1072],"[groupId, loadingResource]",[5305,5317],"[getUserSuggestion, memberList]",[5608,5621],"[filterInput, userSuggestList]"]