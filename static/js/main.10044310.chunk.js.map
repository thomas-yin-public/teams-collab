{"version":3,"sources":["api/common.js","api/request.js","components/Loading/LoadingIconSmall.js","components/Auth/Login.js","components/Auth/PrivateRoute.js","utilities/betterDate.js","components/Common/UserTile.js","api/delete.js","api/post.js","components/Common/ToolBox.js","components/Loading/LoadingIcon.js","components/Groups/MemberBox.js","components/Groups/TaskBox.js","components/Groups/GroupDetail.js","components/Loading/GroupLoading.js","components/Loading/ResourcePreLoad.js","components/Groups/GroupCreateForm.js","components/Groups/GroupPage.js","components/Chat/ChatDisplay.js","components/Chat/ChatTile.js","components/Chat/ChatPage.js","components/Tasks/TaskPage.js","components/Auth/Logout.js","components/NavigationBar/NavigationBar.js","components/Memo/MemoPage.js","App.js","index.js","api/backendURL.js"],"names":["getUserToken","localStorage","getItem","requestUserLogin","email","password","a","fetch","serverURL","method","headers","body","URLSearchParams","toString","then","res","json","requestUserGroupList","userToken","Authorization","requestUserContactList","requestGroupDetail","groupId","requestGroupMemebrs","requestAllUserBasicInfo","LoadingIconSmall","useEffect","circles","document","getElementById","children","i","length","circle","style","animationName","animationDuration","animationDelay","animationIterationCount","className","id","Login","setUserToken","setUserId","history","useHistory","from","useLocation","state","pathname","useState","emailInput","setEmailInput","passwordInput","setPasswordInput","isLoading","setIsLoading","loginErrorMessage","setLoginErrorMessage","width","onSubmit","e","preventDefault","success","setItem","token","userId","replace","err","catch","fetchLogin","onChange","target","value","type","onClick","height","PrivateRoute","to","kMonth_list","beDate","date_text","date","Date","y","getFullYear","m","getMonth","d","getDate","h","getHours","min","getMinutes","padStart","betterTime","time_text","betterTimeDate","getUTCHours","getUTCMinutes","UserTile","userInfo","useContext","UserIdContext","ChatIdContext","setExternChatId","externChatId","showCard","setShowCard","iconTileRef","useRef","popupRef","Fragment","ref","borderRadius","username","toUpperCase","current","position","top","left","bottom","right","minWidth","getBoundingClientRect","x","window","innerHeight","_id","contactUser","messages","push","deleteGroupTask","taskId","deleteGroupMember","memberId","postGroupTask","title","deadline","description","postGroupMember","postMessage","receiver","message","createGroup","groupName","groupDescription","postMarkChatAsRead","chatId","contactUserId","ToolBox","unqiueId","itemList","customDisplay","boxPosition","setBoxPosition","displayBox","setDisplayBox","offsetLeft","offsetTop","parentNode","map","item","action","name","LoadingIcon","RemoveMemberForm","_memberList","memberList","useParams","getGroupMemberList","GroupUpdateContext","setMemberList","submitResponse","setSubmitResponse","showConfirmBox","setShowConfirmBox","selectedMemberId","setSelectedMemberId","removeMember","msOverflowY","member","index","AddUserForm","userSuggestList","setUserSuggestList","userSuggestFilterList","setUserSuggestFilterList","filterInput","setFilterInput","addMember","innerText","disabled","getUserSuggestion","userHash","user","list","filter","newList","match","RegExp","placeholder","overflowX","overflowY","MemberBox","selectedComponent","setSelectedComponent","RemoveTaskForm","groupTasks","getGroupDetail","selectedTaskId","setSelectedTaskId","removeTask","task","AddTaskForm","titleInput","setTitleInput","deadlineInput","setDeadlineInput","descriptionInput","setDescriptionInput","submitTask","TaskBox","GroupDetail","groupInfo","groupMemberList","createdAt","whiteSpace","overflow","textOverflow","display","createdBy","createContext","GroupLoading","setGroupInfo","setGroupMemberList","loadingResource","Provider","GroupContext","ChatContext","TaskContext","ForceReload","WebSocketContext","ws","WebSocket","wsserverURL","ResourcePreLoad","groupData","setGroupData","chatData","setChatData","taskData","onopen","send","JSON","stringify","onmessage","data","json_data","parse","unsafeMessageUpdate","senderId","undefined","newDataList","getTime","sendAt","getUserContactList","getUserGroupList","hashedContactData","contact","reverse","getData","GroupCreateForm","showForm","forceReload","groupNameInput","setGroupNameInput","groupDescriptionInput","setGroupDescriptionInput","errorMessage","setErrorMessage","GroupPage","groupList","useRouteMatch","url","path","filteredGroupList","setFilteredGroupList","filterGroupInput","setFilterGroupInput","showGroupCreateForm","setShowGroupCreateForm","group","filterGroupList","exact","ChatDisplay","contactUserChatData","messageInput","setMessageInput","tmpMessageHolder","setTmpMessageHolder","messageStyle","box","bg","sendMessage","receiverId","splice","scrollToBottom","chatdisplay","scrollTo","scrollHeight","lineHeight","msg","maxWidth","ChatTile","setSelectedContactId","showUnread","setShowUnread","lastMessage","unread","fontSize","ChatPage","sortedChatList","setSortedChatList","filteredChatData","setFilteredChatData","selectedContactId","sortedList","Object","keys","sort","xdate","ydate","makeSortedChatList","filteredList","filterContact","contactId","TaskPage","Logout","removeItem","location","href","pages","icon","link","NavigationBar","setSelectedPageLink","page","split","MemoPage","App","zIndex","ReactDOM","render","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.10044310.chunk.js","sourcesContent":["export const getUserToken = () => {\r\n  return localStorage.getItem('token')\r\n}","import {serverURL} from \"../api/backendURL\";\r\nimport { getUserToken } from \"./common\";\r\n\r\nexport const requestUserLogin = async (email, password) => {\r\n  if (!email || !password) return;\r\n\r\n  return await fetch(`${serverURL}/api/user/login`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n    },\r\n    body: new URLSearchParams({\r\n      email,\r\n      password,\r\n    }).toString(),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const requestUserGroupList = async () => {\r\n  const userToken = getUserToken();\r\n  if (!userToken) return;\r\n\r\n  return await fetch(`${serverURL}/api/user/groups`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + userToken,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const requestUserContactList = async () => {\r\n  const userToken = getUserToken();\r\n  if (!userToken) return;\r\n\r\n  return await fetch(`${serverURL}/api/chat`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + userToken,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const requestGroupDetail = async (groupId) => {\r\n  const userToken = getUserToken();\r\n  if (!userToken || !groupId) return;\r\n\r\n  return await fetch(`${serverURL}/api/group/${groupId}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + userToken,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const requestGroupMemebrs = async (groupId) => {\r\n  const userToken = getUserToken();\r\n  if (!userToken || !groupId) return;\r\n\r\n  return await fetch(`${serverURL}/api/group/${groupId}/members`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + userToken,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const requestAllUserBasicInfo = async () => {\r\n  const userToken = getUserToken();\r\n  if (!userToken) return;\r\n\r\n  return await fetch(`${serverURL}/api/user/all`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + userToken,\r\n    },\r\n  }).then((res) => res.json());\r\n};","import React, { useEffect } from \"react\";\r\n\r\nfunction LoadingIconSmall() {\r\n  useEffect(() => {\r\n    let circles = document.getElementById(\"loading-ani-sm\").children;\r\n\r\n    for (let i = 0; i < circles.length; i++) {\r\n      let circle = circles[i];\r\n      circle.style.animationName = \"gradient-color-sm\";\r\n      circle.style.animationDuration = \"1s\";\r\n      circle.style.animationDelay = (1 / circles.length) * i + \"s\";\r\n      circle.style.animationIterationCount = \"infinite\";\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column justify-content-center h-100\">\r\n        <div id=\"loading-ani-sm\" className=\"loading-container-sm\">\r\n          <div className=\"loading-circle-sm\"></div>\r\n          <div className=\"loading-circle-sm\"></div>\r\n          <div className=\"loading-circle-sm\"></div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingIconSmall;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { requestUserLogin } from \"../../api/request\";\r\nimport LoadingIconSmall from \"../Loading/LoadingIconSmall\";\r\n\r\nfunction Login({ setUserToken, setUserId }) {\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n\r\n  let { from } = location.state || { from: { pathname: \"/groups\" } };\r\n\r\n  const [emailInput, setEmailInput] = useState(\"\");\r\n  const [passwordInput, setPasswordInput] = useState(\"\");\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [loginErrorMessage, setLoginErrorMessage] = useState(\"\");\r\n\r\n  const fetchLogin = (e) => {\r\n    e.preventDefault();\r\n    requestUserLogin(emailInput, passwordInput)\r\n      .then((res) => {\r\n        if (res && res.success) {\r\n          localStorage.setItem(\"token\", res.token);\r\n          localStorage.setItem(\"userId\", res.userId);\r\n          setUserToken(res.token);\r\n          setUserId(res.userId);\r\n          history.replace(from);\r\n        } else {\r\n          setLoginErrorMessage(res.err);\r\n          setIsLoading(false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoginErrorMessage(\"Invalid email or password\");\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center vh-100\">\r\n      <div className=\"align-self-center row\" style={{ width: \"70vw\" }}>\r\n        <form\r\n          className=\"p-3 border more-rounded col-md d-flex flex-column justify-content-center shadow\"\r\n          onSubmit={(e) => fetchLogin(e)}\r\n        >\r\n          <h4 className=\"text-center\">User Login</h4>\r\n          <label className=\"form-label\">Email</label>\r\n          <input\r\n            className=\"form-control more-rounded\"\r\n            onChange={(e) => setEmailInput(e.target.value)}\r\n          />\r\n          <label className=\"form-label\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control more-rounded\"\r\n            onChange={(e) => setPasswordInput(e.target.value)}\r\n          />\r\n          <button\r\n            className=\"btn btn-primary more-rounded w-100 my-2\"\r\n            onClick={() => setIsLoading(true)}\r\n            style={{ height: \"50px\" }}\r\n          >\r\n            {isLoading ? (\r\n              \r\n                <LoadingIconSmall />\r\n            ) : (\r\n              \"Login\"\r\n            )}\r\n          </button>\r\n          {loginErrorMessage && (\r\n            <div className=\"alert alert-danger text-center text-danger\">\r\n              {loginErrorMessage}\r\n            </div>\r\n          )}\r\n        </form>\r\n        <div className=\"col-md alert-warning border more-rounded p-3 mx-3\">\r\n          Some user accounts for demo purpose:\r\n          <div className=\"border more-rounded p-3 mt-2 bg-white\">\r\n            <div className=\"border-bottom\">Jack</div>\r\n            <div>email: jack@test.com</div>\r\n            <div>password: testjack</div>\r\n          </div>\r\n          <div className=\"border more-rounded p-3 mt-2 bg-white\">\r\n            <div className=\"border-bottom\">James</div>\r\n            <div>email: james@test.com</div>\r\n            <div>password: testjames</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nfunction PrivateRoute({ userToken, children }) {\r\n  return <Route>{!userToken ? <Redirect to=\"/login\" /> : children}</Route>;\r\n}\r\n\r\nexport default PrivateRoute;\r\n","const kMonth_list = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\n\r\nexport const beDate = (date_text) => {\r\n  let date = new Date(date_text);\r\n  let y = date.getFullYear();\r\n  let m = date.getMonth() + 1;\r\n  let d = date.getDate();\r\n  let h = date.getHours();\r\n  let min = date.getMinutes();\r\n\r\n  return `${y}-${m.toString().padStart(2, \"0\")}-${d\r\n    .toString()\r\n    .padStart(2, \"0\")} ${h\r\n    .toString()\r\n    .padStart(2, \"0\")}:${min.toString().padStart(2, \"0\")}`;\r\n};\r\n\r\nexport const betterTime = (time_text) => {\r\n  let date = new Date(time_text);\r\n  let h = date.getHours();\r\n  let min = date.getMinutes();\r\n\r\n  return `${h.toString().padStart(2, \"0\")}:${min.toString().padStart(2, \"0\")}`;\r\n};\r\n\r\nexport const betterTimeDate = (time_text) => {\r\n  let date = new Date(time_text);\r\n  let h = date.getUTCHours();\r\n  let min = date.getUTCMinutes();\r\n  let m = date.getMonth();\r\n  let d = date.getDate();\r\n\r\n  return `${h.toString().padStart(2, \"0\")}:${min.toString().padStart(2, \"0\")} ${kMonth_list[m]} ${d}`;\r\n};\r\n","import React, { useCallback, useContext, useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { ChatIdContext, UserIdContext } from \"../../App\";\r\n\r\nfunction UserTile({ userInfo }) {\r\n  const userId = useContext(UserIdContext);\r\n  const { externChatId, setExternChatId } = useContext(ChatIdContext);\r\n  const [showCard, setShowCard] = useState(false);\r\n\r\n  const iconTileRef = useRef(null);\r\n  const popupRef = useRef(null);\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        className=\"row p-1 w-100 hover-bg pt-cursor\"\r\n        ref={iconTileRef}\r\n        onClick={(e) => {\r\n          setShowCard(true);\r\n        }}\r\n      >\r\n        <div\r\n          className=\"d-flex justify-content-center ms-3 col-1 fw-bold bg-white border\"\r\n          style={{ borderRadius: \"100vh\" }}\r\n        >\r\n          {userInfo.username[0].toUpperCase()}\r\n        </div>\r\n        <div className=\"col\">{userInfo.username}</div>\r\n      </div>\r\n      {showCard && (\r\n        <div\r\n          ref={popupRef}\r\n          onClick={(e) => {\r\n            if (e.target === popupRef.current) setShowCard(false);\r\n          }}\r\n          style={{\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            bottom: 0,\r\n            right: 0,\r\n            width: \"100vw\",\r\n            height: \"100vh\",\r\n          }}\r\n        >\r\n          <div\r\n            className=\"bg-white more-rounded shadow border p-2\"\r\n            style={{\r\n              minWidth: \"200px\",\r\n              height: \"150px\",\r\n              position: \"absolute\",\r\n              left:\r\n                iconTileRef.current.getBoundingClientRect().x - 200 < 0\r\n                  ? iconTileRef.current.getBoundingClientRect().x +\r\n                    iconTileRef.current.getBoundingClientRect().width\r\n                  : iconTileRef.current.getBoundingClientRect().x - 200,\r\n              top:\r\n                iconTileRef.current.getBoundingClientRect().y + 150 >=\r\n                window.innerHeight\r\n                  ? iconTileRef.current.getBoundingClientRect().y - 110\r\n                  : iconTileRef.current.getBoundingClientRect().y,\r\n            }}\r\n          >\r\n            <h5>{userInfo.username}</h5>\r\n            <span>Email: {userInfo.email}</span>\r\n            {userInfo._id !== userId && (\r\n              <React.Fragment>\r\n                <hr></hr>\r\n                <div>\r\n                  <button\r\n                    className=\"btn-primary btn more-rounded w-100\"\r\n                    onClick={() => {\r\n                      setExternChatId({\r\n                        contactUser: userInfo,\r\n                        messages: [],\r\n                      });\r\n                      history.push(\"/chats\");\r\n                    }}\r\n                  >\r\n                    Chat\r\n                  </button>\r\n                </div>\r\n              </React.Fragment>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default UserTile;\r\n","import {serverURL} from \"../api/backendURL\";\r\nimport { getUserToken } from \"./common\";\r\n\r\nexport const deleteGroupTask = async ({ groupId, taskId }) => {\r\n  const userToken = getUserToken();\r\n  if (!userToken || !groupId || !taskId) return;\r\n\r\n  return await fetch(`${serverURL}/api/group/${groupId}/task/${taskId}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + userToken,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const deleteGroupMember = async ({ groupId, memberId }) => {\r\n  const userToken = getUserToken();\r\n  if (!userToken || !groupId || !memberId) return;\r\n  return await fetch(`${serverURL}/api/group/${groupId}/member/${memberId}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + userToken,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n","import { serverURL } from \"../api/backendURL\";\r\nimport { getUserToken } from \"./common\";\r\n\r\nexport const postGroupTask = async ({\r\n  groupId,\r\n  title,\r\n  deadline,\r\n  description,\r\n}) => {\r\n  const userToken = getUserToken();\r\n  if (!userToken || !groupId || !title || !deadline || !description) return;\r\n\r\n  return await fetch(`${serverURL}/api/group/task`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + userToken,\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n    },\r\n    body: new URLSearchParams({\r\n      title,\r\n      deadline,\r\n      description,\r\n      groupId,\r\n    }).toString(),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const postGroupMember = async ({ groupId, memberId }) => {\r\n  const userToken = getUserToken();\r\n  if (!userToken || !groupId || !memberId) return;\r\n\r\n  return await fetch(`${serverURL}/api/group/${groupId}/member/${memberId}`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + userToken,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const postMessage = async ({ receiver, type, message }) => {\r\n  const userToken = getUserToken();\r\n  if (!userToken || !receiver || !type || !message) return;\r\n\r\n  return await fetch(`${serverURL}/api/chat`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + userToken,\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n    },\r\n    body: new URLSearchParams({ receiver, type, message }).toString(),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const queryChatDataContainBothUsers = async (contactUserId) => {\r\n  const userToken = getUserToken();\r\n  if (!userToken || !contactUserId) return;\r\n\r\n  return await fetch(`${serverURL}/api/chat/users`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + userToken,\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n    },\r\n    body: new URLSearchParams({ contactUserId }).toString(),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const createGroup = async (groupName, groupDescription = \"\") => {\r\n  const userToken = getUserToken();\r\n  if (!userToken || !groupName) return;\r\n\r\n  return await fetch(`${serverURL}/api/group`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + userToken,\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n    },\r\n    body: new URLSearchParams({ groupName, groupDescription }).toString(),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const postMarkChatAsRead = async (chatId, contactUserId) => {\r\n  const userToken = getUserToken();\r\n  if (!userToken || !contactUserId) return;\r\n\r\n  return await fetch(`${serverURL}/api/chat/read`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n      Authorization: \"Bearer \" + userToken,\r\n    },\r\n    body: new URLSearchParams({\r\n      chatId,\r\n      contactUserId,\r\n    }).toString(),\r\n  }).then((res) => res.json());\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nfunction ToolBox({ unqiueId, itemList, customDisplay }) {\r\n  const [boxPosition, setBoxPosition] = useState([0, 0]);\r\n  const [displayBox, setDisplayBox] = useState(false);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"ms-auto text-muted\">\r\n        <div\r\n          onClick={(e) => {\r\n            setDisplayBox(true);\r\n            setBoxPosition([e.target.offsetLeft, e.target.offsetTop]);\r\n          }}\r\n        >\r\n          {customDisplay || <i className=\"bi bi-three-dots-vertical\"></i>}\r\n        </div>\r\n      </div>\r\n\r\n      {displayBox && (\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100vw\",\r\n            height: \"100vh\",\r\n          }}\r\n          onClick={(e) =>\r\n            e.target.parentNode.id !== \"taskBox\" && setDisplayBox(false)\r\n          }\r\n        >\r\n          <ul\r\n            id={unqiueId}\r\n            className=\"list-group bg-white shadow-sm\"\r\n            style={{\r\n              minWidth: \"150px\",\r\n              position: \"absolute\",\r\n              top: boxPosition[1],\r\n              right: `calc( 100vw - ${boxPosition[0]}px )`,\r\n            }}\r\n          >\r\n            {itemList.map((item) => (\r\n              <li\r\n                key={item.name}\r\n                className=\"list-group-item pt-cursor\"\r\n                onClick={item.action}\r\n              >\r\n                {item.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ToolBox;\r\n","import React, { useEffect } from \"react\";\r\n\r\nfunction LoadingIcon() {\r\n  useEffect(() => {\r\n    let circles = document.getElementById(\"loading-ani\").children;\r\n\r\n    for (let i = 0; i < circles.length; i++) {\r\n      let circle = circles[i];\r\n      circle.style.animationName = \"gradient-color\";\r\n      circle.style.animationDuration = \"1s\";\r\n      circle.style.animationDelay = (1 / circles.length) * i + \"s\";\r\n      circle.style.animationIterationCount = \"infinite\";\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column justify-content-center h-100 w-100\">\r\n      <div>\r\n        <div id=\"loading-ani\" className=\"loading-container\">\r\n          <div className=\"loading-circle\"></div>\r\n          <div className=\"loading-circle\"></div>\r\n          <div className=\"loading-circle\"></div>\r\n          <div className=\"loading-circle\"></div>\r\n          <div className=\"loading-circle\"></div>\r\n        </div>\r\n        <div className=\"m-auto text-center mt-4\">\r\n          It takes some time to load and wake the server\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingIcon;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { deleteGroupMember } from \"../../api/delete\";\r\nimport { postGroupMember } from \"../../api/post\";\r\nimport { requestAllUserBasicInfo } from \"../../api/request\";\r\nimport ToolBox from \"../Common/ToolBox\";\r\nimport { GroupUpdateContext } from \"../Loading/GroupLoading\";\r\nimport LoadingIcon from \"../Loading/LoadingIcon\";\r\n\r\nfunction MemberBox({ memberList }) {\r\n  const [selectedComponent, setSelectedComponent] = useState(\"\");\r\n\r\n  const itemList = [\r\n    {\r\n      name: \"Add Member\",\r\n      action: () =>\r\n        setSelectedComponent(<AddUserForm memberList={memberList} />),\r\n    },\r\n    {\r\n      name: \"Remove Member\",\r\n      action: () =>\r\n        setSelectedComponent(<RemoveMemberForm memberList={memberList} />),\r\n    },\r\n  ];\r\n  return (\r\n    <React.Fragment>\r\n      <ToolBox unqiueId=\"meber-box\" itemList={itemList} />\r\n      {selectedComponent ? (\r\n        <div className=\"custom-modal m-auto\">\r\n          <div\r\n            className=\"d-flex flex-column bg-white border shadow-sm more-rounded\"\r\n            style={{ minWidth: \"50vw\" }}\r\n          >\r\n            <button\r\n              className=\"btn m-0 p-0 d-flex flex-row-reverse fs-2 pe-2\"\r\n              onClick={() => setSelectedComponent(\"\")}\r\n            >\r\n              <i className=\"bi bi-x\"></i>\r\n            </button>\r\n            {selectedComponent}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction RemoveMemberForm({ memberList: _memberList }) {\r\n  let { groupId } = useParams();\r\n  let { getGroupMemberList } = useContext(GroupUpdateContext);\r\n  const [memberList, setMemberList] = useState(_memberList);\r\n\r\n  const [submitResponse, setSubmitResponse] = useState(\"\");\r\n\r\n  const [showConfirmBox, setShowConfirmBox] = useState(false);\r\n  const [selectedMemberId, setSelectedMemberId] = useState(\"\");\r\n\r\n  const removeMember = async () => {\r\n    deleteGroupMember({ groupId, memberId: selectedMemberId }).then((res) => {\r\n      if (res.success) {\r\n        setSubmitResponse(<div className=\"alert alert-success\">Success!</div>);\r\n        getGroupMemberList();\r\n      } else {\r\n        setSubmitResponse(\r\n          <div className=\"alert alert-danger\">\r\n            Something wrong with the connection. Please try to submit again.\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    setMemberList(_memberList);\r\n  }, [_memberList]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {showConfirmBox && (\r\n        <div className=\"d-flex flex-column custom-modal\">\r\n          <h3>Are you sure to delete this user?</h3>\r\n          <div className=\"row mt-3\">\r\n            <button\r\n              style={{ width: \"20vw\" }}\r\n              className=\"col-md btn btn-danger\"\r\n              onClick={() => {\r\n                removeMember();\r\n                setShowConfirmBox(false);\r\n              }}\r\n            >\r\n              Yes\r\n            </button>\r\n            <button\r\n              style={{ width: \"20vw\" }}\r\n              className=\"col-md btn btn-primary ms-2\"\r\n              onClick={() => setShowConfirmBox(false)}\r\n            >\r\n              No\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"px-5\">\r\n        <h1>Delete User</h1>\r\n        {submitResponse}\r\n        <div className=\"\" style={{ height: \"60vh\", msOverflowY: \"auto\" }}>\r\n          {memberList.map((member, index) => (\r\n            <div key={member._id} className=\"row p-0 m-0 py-1\">\r\n              <div className=\"col-md p-0 m-0\">\r\n                #{index + 1} {member.username}\r\n              </div>\r\n              <button\r\n                className=\"btn btn-danger col-md-2\"\r\n                onClick={() => {\r\n                  setSelectedMemberId(member._id);\r\n                  setShowConfirmBox(true);\r\n                }}\r\n              >\r\n                Remove\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction AddUserForm({ memberList }) {\r\n  let { groupId } = useParams();\r\n  let { getGroupMemberList } = useContext(GroupUpdateContext);\r\n  const [userSuggestList, setUserSuggestList] = useState([]);\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const [submitResponse, setSubmitResponse] = useState(\"\");\r\n  const [userSuggestFilterList, setUserSuggestFilterList] = useState([]);\r\n  const [filterInput, setFilterInput] = useState(\"\");\r\n\r\n  const addMember = async (e, memberId) => {\r\n    e.target.innerText = \"Processing\";\r\n    postGroupMember({ groupId, memberId }).then((res) => {\r\n      if (res.success) {\r\n        getGroupMemberList();\r\n        e.target.innerText = \"✔\";\r\n        e.target.className = e.target.className.replace(\r\n          \"btn-primary\",\r\n          \"btn-success\"\r\n        );\r\n        e.target.disabled = true;\r\n      } else {\r\n        e.target.innerText = \"Add\";\r\n      }\r\n    });\r\n  };\r\n\r\n  const getUserSuggestion = async () => {\r\n    requestAllUserBasicInfo().then((res) => {\r\n      let userHash = {};\r\n      for (let user of memberList) {\r\n        userHash[user._id] = 1;\r\n      }\r\n      let list = res.filter((user) => !userHash[user._id]);\r\n      setUserSuggestList(list);\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (memberList) getUserSuggestion();\r\n  }, [memberList]);\r\n\r\n  useEffect(() => {\r\n    setUserSuggestFilterList(userSuggestList);\r\n  }, [userSuggestList]);\r\n\r\n  useEffect(() => {\r\n    let newList = userSuggestList?.filter((user) =>\r\n      user.email.match(new RegExp(`${filterInput}`, \"gmi\"))\r\n    );\r\n    setUserSuggestFilterList(newList);\r\n  }, [filterInput]);\r\n\r\n  return (\r\n    <div className=\"p-5\" style={{ width: \"50vw\", height: \"80vh\" }}>\r\n      <h1>Add Member</h1>\r\n      <input\r\n        className=\"form-control\"\r\n        value={filterInput}\r\n        placeholder=\"Type the user's email to search...\"\r\n        onChange={(e) => setFilterInput(e.target.value)}\r\n      ></input>\r\n      <div className=\"\">\r\n        <div className=\"row p-1\">\r\n          <div className=\"col-md\">Username</div>\r\n          <div className=\"col-md\">Email address</div>\r\n          <div className=\"col-md-2\"></div>\r\n        </div>\r\n        <div\r\n          className=\"m-0 p-0\"\r\n          style={{ height: \"50vh\", overflowX: \"hidden\", overflowY: \"auto\" }}\r\n        >\r\n          {isLoading ? (\r\n            <LoadingIcon />\r\n          ) : (\r\n            userSuggestFilterList.map((user) => (\r\n              <div\r\n                key={user._id}\r\n                className=\"row w-100 p-0 m-0 mt-1 border more-rounded d-flex\r\n                 flex-row justify-content-center align-items-center\"\r\n              >\r\n                <div className=\"col-md \">{user.username}</div>\r\n                <div className=\"col-md \">{user.email}</div>\r\n                <div className=\"col-md-2 \">\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={(e) => addMember(e, user._id)}\r\n                  >\r\n                    Add\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MemberBox;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { deleteGroupTask } from \"../../api/delete\";\r\nimport { postGroupTask } from \"../../api/post\";\r\nimport ToolBox from \"../Common/ToolBox\";\r\nimport { GroupUpdateContext } from \"../Loading/GroupLoading\";\r\n\r\nfunction TaskBox({ groupTasks }) {\r\n  const [selectedComponent, setSelectedComponent] = useState(\"\");\r\n  const itemList = [\r\n    {\r\n      name: \"Add Task\",\r\n      action: () => setSelectedComponent(<AddTaskForm />),\r\n    },\r\n    {\r\n      name: \"Remove Task\",\r\n      action: () =>\r\n        setSelectedComponent(<RemoveTaskForm groupTasks={groupTasks} />),\r\n    },\r\n  ];\r\n  return (\r\n    <React.Fragment>\r\n      <ToolBox unqiueId=\"task_box\" itemList={itemList} />\r\n      {selectedComponent ? (\r\n        <div className=\"custom-modal m-auto\">\r\n          <div\r\n            className=\"d-flex flex-column bg-white border shadow-sm more-rounded\"\r\n            style={{ minWidth: \"50vw\" }}\r\n          >\r\n            <button\r\n              className=\"btn m-0 p-0 d-flex flex-row-reverse fs-2 pe-2\"\r\n              onClick={() => setSelectedComponent(\"\")}\r\n            >\r\n              <i className=\"bi bi-x\"></i>\r\n            </button>\r\n            {selectedComponent}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction RemoveTaskForm({ groupTasks }) {\r\n  let { groupId } = useParams();\r\n  let { getGroupDetail } = useContext(GroupUpdateContext);\r\n\r\n  const [submitResponse, setSubmitResponse] = useState(\"\");\r\n\r\n  const [showConfirmBox, setShowConfirmBox] = useState(false);\r\n  const [selectedTaskId, setSelectedTaskId] = useState(\"\");\r\n\r\n  const removeTask = async () => {\r\n    deleteGroupTask({ groupId, taskId: selectedTaskId }).then((res) => {\r\n      if (res.success) {\r\n        setSubmitResponse(<div className=\"alert alert-success\">Success!</div>);\r\n        getGroupDetail();\r\n      } else {\r\n        setSubmitResponse(\r\n          <div className=\"alert alert-danger\">\r\n            Something wrong with the connection. Please try to submit again.\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {showConfirmBox && (\r\n        <div className=\"d-flex flex-column custom-modal\">\r\n          <h3>Are you sure to delete this item?</h3>\r\n          <div className=\"row mt-3\">\r\n            <button\r\n              style={{ width: \"20vw\" }}\r\n              className=\"col-md btn btn-danger\"\r\n              onClick={() => {\r\n                removeTask();\r\n                setShowConfirmBox(false);\r\n              }}\r\n            >\r\n              Yes\r\n            </button>\r\n            <button\r\n              style={{ width: \"20vw\" }}\r\n              className=\"col-md btn btn-primary ms-2\"\r\n              onClick={() => setShowConfirmBox(false)}\r\n            >\r\n              No\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"px-5\">\r\n        <h1>Delete Task</h1>\r\n        {submitResponse}\r\n        <div className=\"\" style={{ height: \"60vh\", msOverflowY: \"auto\" }}>\r\n          {groupTasks.map((task, index) => (\r\n            <div key={task._id} className=\"row p-0 m-0 py-1\">\r\n              <div className=\"col-md p-0 m-0\">\r\n                #{index + 1} {task.title}\r\n              </div>\r\n              <button\r\n                className=\"btn btn-danger col-md-2\"\r\n                onClick={() => {\r\n                  setSelectedTaskId(task._id);\r\n                  setShowConfirmBox(true);\r\n                }}\r\n              >\r\n                Remove\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nfunction AddTaskForm() {\r\n  let { groupId } = useParams();\r\n  let { getGroupDetail } = useContext(GroupUpdateContext);\r\n\r\n  const [titleInput, setTitleInput] = useState(\"\");\r\n  const [deadlineInput, setDeadlineInput] = useState(\"\");\r\n  const [descriptionInput, setDescriptionInput] = useState(\"\");\r\n\r\n  const [submitResponse, setSubmitResponse] = useState(\"\");\r\n\r\n  const submitTask = async () => {\r\n    postGroupTask({\r\n      groupId,\r\n      title: titleInput,\r\n      deadline: deadlineInput,\r\n      description: descriptionInput,\r\n    }).then((res) => {\r\n      if (res.success) {\r\n        setSubmitResponse(<div className=\"alert alert-success\">Success!</div>);\r\n        getGroupDetail();\r\n      } else {\r\n        setSubmitResponse(\r\n          <div className=\"alert alert-danger\">\r\n            Something wrong with the connection. Please try to submit again.\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={(e) => e.preventDefault()}>\r\n      <div className=\"px-5 pb-5\">\r\n        <h1>Create A Task</h1>\r\n        <p>Please fill in all the information in order to create a new task.</p>\r\n        {submitResponse}\r\n        <label className=\"form-label mt-2\">Title</label>\r\n        <input\r\n          className=\"form-control\"\r\n          type=\"text\"\r\n          value={titleInput}\r\n          onChange={(e) => setTitleInput(e.target.value)}\r\n        ></input>\r\n        <label className=\"form-label mt-2\">Deadline</label>\r\n        <input\r\n          type=\"date\"\r\n          className=\"form-control\"\r\n          value={deadlineInput}\r\n          onChange={(e) => setDeadlineInput(e.target.value)}\r\n        ></input>\r\n        <label className=\"form-label mt-2\">Description</label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          value={descriptionInput}\r\n          onChange={(e) => setDescriptionInput(e.target.value)}\r\n        ></textarea>\r\n        <div className=\"d-flex flex-row-reverse mt-3\">\r\n          <button className=\"btn btn-primary ms-2\" onClick={() => submitTask()}>\r\n            Add Task\r\n          </button>\r\n          <button\r\n            className=\"btn btn-outline-primary ms-2\"\r\n            type=\"reset\"\r\n            onClick={() => {\r\n              setDeadlineInput(\"\");\r\n              setTitleInput(\"\");\r\n              setDescriptionInput(\"\");\r\n            }}\r\n          >\r\n            Reset\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TaskBox;\r\n","import React from \"react\";\r\nimport { beDate } from \"../../utilities/betterDate\";\r\nimport UserTile from \"../Common/UserTile\";\r\nimport MemberBox from \"./MemberBox\";\r\nimport TaskBox from \"./TaskBox\";\r\n\r\nfunction GroupDetail({ groupInfo, groupMemberList }) {\r\n  return (\r\n    <div className=\"text-grey p-3\">\r\n      <div className=\"border-bottom pb-3\">\r\n        <h1 className=\"text-dark\">{groupInfo?.groupName}</h1>\r\n        <div>Created at: {beDate(groupInfo?.createdAt)}</div>\r\n      </div>\r\n\r\n      <div className=\"row mt-3\" style={{ height: \"25vh\" }}>\r\n        <div className=\"col-md\">\r\n          <div className=\"d-flex flex-row\">\r\n            <h5>Announcements</h5>\r\n            <div className=\"ms-auto text-muted\">\r\n              <i className=\"bi bi-three-dots-vertical\"></i>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <em>There is no announcement so far.</em>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <div className=\"d-flex flex-row\">\r\n            <h5>Members ({groupMemberList.length})</h5>\r\n            <MemberBox memberList={groupMemberList} />\r\n          </div>\r\n\r\n          <div\r\n            className=\"w-100\"\r\n            style={{ height: \"21vh\", overflowY: \"auto\", overflowX: \"hidden\" }}\r\n          >\r\n            <table className=\"blue-trans-bg more-rounded w-100\">\r\n              <tbody>\r\n                {groupMemberList.map((member) => (\r\n                  <tr key={member._id} className=\"blue-text fw-bold\">\r\n                    <td className=\"p-2\">\r\n                      <div\r\n                        style={{\r\n                          width: \"18vw\",\r\n                          whiteSpace: \"nowrap\",\r\n                          overflow: \"hidden\",\r\n                          textOverflow: \"ellipsis\",\r\n                        }}\r\n                      >\r\n                        <UserTile userInfo={member}/>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-3\">\r\n        <div className=\"d-flex flex-row mb-2\">\r\n          <h5>Tasks ({groupInfo?.groupTasks.length})</h5>\r\n          <TaskBox groupTasks={groupInfo?.groupTasks} />\r\n        </div>\r\n\r\n        <table className=\"w-100\">\r\n          <thead className=\"border-bottom shadow-sm blue-trans-bg\">\r\n            <tr style={{ display: \"block\" }}>\r\n              <td className=\"p-2 blue-text fw-bold\" style={{ width: \"20vw\" }}>Deadline</td>\r\n              <td className=\"p-2 blue-text fw-bold\" style={{ width: \"40vw\" }}>Title</td>\r\n              <td className=\"p-2 blue-text fw-bold\" style={{ width: \"20vw\" }}>Created By</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody\r\n            className=\"blue-trans-bg\"\r\n            style={{\r\n              display: \"block\",\r\n              overflow: \"auto\",\r\n              width: \"100%\",\r\n              height: \"30vh\",\r\n            }}\r\n          >\r\n            {groupInfo?.groupTasks.map((task) => (\r\n              <tr key={task._id} className=\"border-bottom\">\r\n                <td className=\"blue-text p-2\" style={{ width: \"20vw\" }}>{beDate(task.deadline)}</td>\r\n                <td className=\"blue-text ps-3 p-2\" style={{ width: \"40vw\" }}>\r\n                  {task.title}\r\n                </td>\r\n                <td\r\n                  className=\"blue-text ps-1 p-2\"\r\n                  style={{ width: \"20vw\", overflow: \"hidden\" }}\r\n                >\r\n                  <UserTile userInfo={task.createdBy}/>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GroupDetail;\r\n","import React, { useState, useEffect, createContext } from \"react\";\r\nimport GroupDetail from \"../Groups/GroupDetail\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport { requestGroupDetail, requestGroupMemebrs } from \"../../api/request\";\r\nimport LoadingIcon from \"./LoadingIcon\";\r\n\r\nexport const GroupUpdateContext = createContext();\r\n\r\nfunction GroupLoading({ children }) {\r\n  let { groupId } = useParams();\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const [groupInfo, setGroupInfo] = useState();\r\n  const [groupMemberList, setGroupMemberList] = useState([]);\r\n\r\n  const getGroupDetail = async () => {\r\n    return requestGroupDetail(groupId).then((res) => {\r\n      setGroupInfo(res);\r\n    });\r\n  };\r\n\r\n  const getGroupMemberList = async () => {\r\n    return requestGroupMemebrs(groupId).then((res) => {\r\n      setGroupMemberList(res);\r\n    });\r\n  };\r\n\r\n  const loadingResource = async () => {\r\n    await getGroupDetail();\r\n    await getGroupMemberList();\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadingResource();\r\n  }, [groupId]);\r\n\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        <div\r\n          className=\"d-flex flex-column justify-content-center vh-100 overflow-hidden\"\r\n          style={{\r\n            height: \"100%\"\r\n          }}\r\n        >\r\n          <LoadingIcon />\r\n        </div>\r\n      ) : (\r\n        <GroupUpdateContext.Provider\r\n          value={{ getGroupDetail, getGroupMemberList }}\r\n        >\r\n          <GroupDetail\r\n            groupInfo={groupInfo}\r\n            groupMemberList={groupMemberList}\r\n          />\r\n        </GroupUpdateContext.Provider>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GroupLoading;\r\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { wsserverURL } from \"../../api/backendURL\";\r\n\r\nimport {\r\n  requestUserContactList,\r\n  requestUserGroupList,\r\n} from \"../../api/request\";\r\nimport { UserIdContext } from \"../../App\";\r\nimport LoadingIcon from \"./LoadingIcon\";\r\n\r\nexport const GroupContext = createContext(\"\");\r\nexport const ChatContext = createContext(\"\");\r\nexport const TaskContext = createContext(\"\");\r\n\r\nexport const ForceReload = createContext(\"\");\r\n\r\nexport const WebSocketContext = createContext();\r\n\r\nconst ws = new WebSocket(wsserverURL);\r\n\r\nfunction ResourcePreLoad({ children }) {\r\n  const userId = useContext(UserIdContext);\r\n\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const [groupData, setGroupData] = useState();\r\n  const [chatData, setChatData] = useState();\r\n  const [taskData, setTaskData] = useState();\r\n\r\n  ws.onopen = () => {\r\n    ws.send(JSON.stringify({ userId, action: \"REGISTER\" }));\r\n  };\r\n\r\n  ws.onmessage = (data) => {\r\n    let json_data = JSON.parse(data.data);\r\n    // console.log(data);\r\n    unsafeMessageUpdate(json_data);\r\n  };\r\n\r\n  const unsafeMessageUpdate = ({ chatId, userId: senderId, message }) => {\r\n    if (chatData[senderId] !== undefined) {\r\n      let newDataList = chatData;\r\n      newDataList[senderId].messages = [\r\n        {\r\n          _id: new Date().getTime(),\r\n          senderId,\r\n          message,\r\n          sendAt: new Date().getTime(),\r\n        },\r\n        ...newDataList[senderId].messages,\r\n      ];\r\n      setChatData({ ...newDataList });\r\n    } else {\r\n      getUserContactList();\r\n    }\r\n  };\r\n\r\n  const getUserGroupList = async () => {\r\n    return requestUserGroupList().then((res) => setGroupData(res));\r\n  };\r\n\r\n  const getUserContactList = async () => {\r\n    return requestUserContactList().then((res) => {\r\n      let hashedContactData = {};\r\n      for (let contact of res) {\r\n        contact.messages = contact.messages.reverse();\r\n        // hashedContactData[contact._id] = contact;\r\n        hashedContactData[contact.contactUser._id] = contact;\r\n      }\r\n      setChatData({ ...hashedContactData });\r\n    });\r\n  };\r\n\r\n  const getData = async () => {\r\n    await getUserContactList();\r\n    await getUserGroupList();\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  return (\r\n    <ForceReload.Provider value={getData}>\r\n      <WebSocketContext.Provider value={ws}>\r\n        <GroupContext.Provider value={groupData}>\r\n          <ChatContext.Provider value={{ chatData, getUserContactList }}>\r\n            <TaskContext.Provider value={taskData}>\r\n              {isLoading ? (\r\n                <div\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    height: \"100vh\",\r\n                    width: \"100vw\",\r\n                  }}\r\n                >\r\n                  <LoadingIcon />\r\n                </div>\r\n              ) : (\r\n                children\r\n              )}\r\n            </TaskContext.Provider>\r\n          </ChatContext.Provider>\r\n        </GroupContext.Provider>\r\n      </WebSocketContext.Provider>\r\n    </ForceReload.Provider>\r\n  );\r\n}\r\n\r\nexport default ResourcePreLoad;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { createGroup } from \"../../api/post\";\r\nimport { ForceReload } from \"../Loading/ResourcePreLoad\";\r\n\r\nfunction GroupCreateForm({ showForm }) {\r\n  const forceReload = useContext(ForceReload);\r\n\r\n  const [groupNameInput, setGroupNameInput] = useState();\r\n  const [groupDescriptionInput, setGroupDescriptionInput] = useState();\r\n\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const postCreateGroup = () => {\r\n    createGroup(groupNameInput, groupDescriptionInput)\r\n      .then((res) => {\r\n        if (res && res.success) {\r\n          forceReload();\r\n          showForm(false);\r\n        } else {\r\n          setErrorMessage(\"Failed to create the group\");\r\n        }\r\n      })\r\n      .catch((err) => setErrorMessage(\"Failed to create the group\"));\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"vh-100 vw-100 d-flex justify-content-center bg-blur\"\r\n      style={{ position: \"absolute\", top: 0, left: 0 }}\r\n    >\r\n      <form\r\n        className=\"m-auto border more-rounded p-3 shadow bg-white\"\r\n        style={{ width: \"50vw\" }}\r\n        onSubmit={(e) => e.preventDefault()}\r\n      >\r\n        <h1>Group Create Form</h1>\r\n        <label>Group Name</label>\r\n        <input\r\n          className=\"form-control\"\r\n          value={groupNameInput}\r\n          onChange={(e) => setGroupNameInput(e.target.value)}\r\n        ></input>\r\n        <label>Group Description</label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          value={groupDescriptionInput}\r\n          onChange={(e) => setGroupDescriptionInput(e.target.value)}\r\n        />\r\n        {errorMessage && <div className=\"alert-danger p-2 my-2 border more-rounded\">{errorMessage}</div>}\r\n        <div className=\"d-flex flex-row justify-content-end\">\r\n          <button\r\n            className=\"btn btn-primary ms-2 mt-2\"\r\n            onClick={() => postCreateGroup()}\r\n          >\r\n            Create group\r\n          </button>\r\n          <button\r\n            className=\"btn btn-primary ms-2 mt-2\"\r\n            onClick={() => showForm(false)}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GroupCreateForm;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link, Route, useRouteMatch } from \"react-router-dom\";\r\nimport GroupLoading from \"../Loading/GroupLoading\";\r\nimport { GroupContext } from \"../Loading/ResourcePreLoad\";\r\nimport GroupCreateForm from \"./GroupCreateForm\";\r\n\r\nfunction GroupPage() {\r\n  const groupList = useContext(GroupContext);\r\n\r\n  let { url, path } = useRouteMatch();\r\n\r\n  const [filteredGroupList, setFilteredGroupList] = useState(groupList);\r\n  const [filterGroupInput, setFilterGroupInput] = useState(\"\");\r\n\r\n  const [showGroupCreateForm, setShowGroupCreateForm] = useState(false);\r\n\r\n  const filterGroupList = () => {\r\n    let newList = [];\r\n    for (let group of groupList) {\r\n      if (group.groupName.match(new RegExp(filterGroupInput, \"gmi\")))\r\n        newList.push(group);\r\n    }\r\n\r\n    setFilteredGroupList(newList);\r\n  };\r\n\r\n  useEffect(() => {\r\n    filterGroupList();\r\n  }, [filterGroupInput, groupList]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {showGroupCreateForm && (\r\n        <GroupCreateForm showForm={setShowGroupCreateForm} />\r\n      )}\r\n      <div className=\"row m-0 p-0 h-100\">\r\n        <div\r\n          className=\"col-md-2 p-0 m-0 h-100 shadow-sm border-end d-flex flex-column\"\r\n          style={{ minWidth: \"195px\" }}\r\n        >\r\n          <input\r\n            className=\"form-control border-0 h-50px\"\r\n            onChange={(e) => setFilterGroupInput(e.target.value)}\r\n            placeholder=\"Search Group\"\r\n          />\r\n          <div className=\"fw-bold d-flex flex-column overflowY\">\r\n            <div className=\"my-2 p-3\">Quick Links</div>\r\n            {groupList.map((group) => (\r\n              <Link\r\n                key={group._id}\r\n                to={`${url}/${group._id}`}\r\n                className=\"px-3 py-1 border-bottom w-100 text-center bg-white\"\r\n              >\r\n                {group.groupName}\r\n              </Link>\r\n            ))}\r\n          </div>\r\n          <button\r\n            className=\"mt-auto btn btn-primary rounded-0 w-100\"\r\n            onClick={() => setShowGroupCreateForm(true)}\r\n          >\r\n            Create Group\r\n          </button>\r\n        </div>\r\n        <div className=\"col-md pt-3 bg-white px-5 shadow-left\">\r\n          <Route exact path={path}>\r\n            <h1>Groups</h1>\r\n            <div className=\"d-flex flex-wrap\">\r\n              {filteredGroupList.map((group) => (\r\n                <Link\r\n                  key={group._id}\r\n                  to={`${url}/${group._id}`}\r\n                  className=\"text-white me-3 mb-3 more-rounded\"\r\n                >\r\n                  <div\r\n                    className=\"btn d-flex flex-column blue-trans-bg blue-text fw-bold \"\r\n                    style={{ width: \"170px\" }}\r\n                  >\r\n                    {\" \"}\r\n                    <i className=\"bi bi-folder-fill fs-1\"></i>\r\n                    {group.groupName}\r\n                  </div>\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </Route>\r\n          <Route path={`${path}/:groupId`}>\r\n            <GroupLoading />\r\n          </Route>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default GroupPage;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { postMessage } from \"../../api/post\";\r\nimport { UserIdContext } from \"../../App\";\r\nimport { betterTime, betterTimeDate } from \"../../utilities/betterDate\";\r\nimport { ChatContext, WebSocketContext } from \"../Loading/ResourcePreLoad\";\r\n\r\nfunction ChatDisplay({ contactUserChatData, className }) {\r\n  const userId = useContext(UserIdContext);\r\n  const ws = useContext(WebSocketContext);\r\n  const { getUserContactList } = useContext(ChatContext);\r\n\r\n  const [messageInput, setMessageInput] = useState(\"\");\r\n  const [tmpMessageHolder, setTmpMessageHolder] = useState([]);\r\n\r\n  const messageStyle = {\r\n    left: { box: \"justify-content-start\", bg: \"bg-light\" },\r\n    right: { box: \"justify-content-end\", bg: \"darkblue-bg text-white\" },\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (!messageInput) return;\r\n\r\n    let message = messageInput;\r\n    let receiverId = contactUserChatData.contactUser._id;\r\n    setMessageInput(\"\");\r\n    setTmpMessageHolder([...tmpMessageHolder, messageInput]);\r\n    ws.send(\r\n      JSON.stringify({\r\n        userId,\r\n        receiverId,\r\n        action: \"NEW_CHAT_MESSAGE\",\r\n        message: messageInput,\r\n        chatId: contactUserChatData._id,\r\n      })\r\n    );\r\n\r\n    postMessage({\r\n      message,\r\n      type: \"text\",\r\n      receiver: receiverId,\r\n    }).then(async (res) => {\r\n      if (res.success) {\r\n        await getUserContactList();\r\n        setTmpMessageHolder([...tmpMessageHolder].splice(0, 1));\r\n        scrollToBottom();\r\n      } else {\r\n      }\r\n    });\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    let chatdisplay = document.getElementById(\"chatdisplay\")\r\n    chatdisplay.scrollTo(0, chatdisplay.scrollHeight)\r\n  }\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [])\r\n\r\n  return (\r\n    <div className={`${className} overflow-hidden m-0 p-0 shadow-left`}>\r\n      <h3\r\n        className=\"border-bottom h-50px m-0 px-3\"\r\n        style={{ lineHeight: \"50px\" }}\r\n      >\r\n        {contactUserChatData.contactUser.username}\r\n      </h3>\r\n      <div\r\n        id=\"chatdisplay\"\r\n        className=\"overflow-auto px-3 py-2 d-flex flex-column-reverse\"\r\n        style={{ height: \"82%\" }}\r\n      >\r\n        {tmpMessageHolder.map((msg, index) => {\r\n          return (\r\n            <div key={index}>\r\n              <div className={`d-flex ${messageStyle.right.box}`}>\r\n                <span\r\n                  className={`more-rounded mt-1 px-3 p-1 border ${messageStyle.right.bg}`}\r\n                  style={{ maxWidth: \"55%\" }}\r\n                >\r\n                  {msg}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        {contactUserChatData.messages?.map((msg) => {\r\n          return (\r\n            <div key={msg._id}>\r\n              <div\r\n                className={`d-flex ${\r\n                  userId === msg.senderId\r\n                    ? messageStyle.right.box\r\n                    : messageStyle.left.box\r\n                }`}\r\n              >\r\n                <span\r\n                  className={`more-rounded mt-1 px-3 p-1 border ${\r\n                    userId === msg.senderId\r\n                      ? messageStyle.right.bg\r\n                      : messageStyle.left.bg\r\n                  }`}\r\n                  style={{ maxWidth: \"55%\" }}\r\n                >\r\n                  {msg.message}\r\n                </span>\r\n                <sub className=\"align-self-center mx-1 text-muted\">\r\n                  {betterTimeDate(msg.sendAt)}\r\n                </sub>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <form\r\n        className=\"d-flex flex-row py-2 border-top px-2\"\r\n        onSubmit={(e) => e.preventDefault()}\r\n      >\r\n        <input\r\n          className=\"form-control more-rounded\"\r\n          value={messageInput}\r\n          onChange={(e) => setMessageInput(e.target.value)}\r\n        ></input>\r\n        <button\r\n          className=\"btn btn-primary more-rounded ms-1\"\r\n          type=\"submit\"\r\n          onClick={() => sendMessage()}\r\n        >\r\n          Send\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatDisplay;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { postMarkChatAsRead } from \"../../api/post\";\r\nimport { betterTime } from \"../../utilities/betterDate\";\r\nimport { ForceReload } from \"../Loading/ResourcePreLoad\";\r\n\r\nfunction ChatTile({ contact, setSelectedContactId, userId }) {\r\n  const forceReload = useContext(ForceReload)\r\n\r\n  const [showUnread, setShowUnread] = useState(true)\r\n  let lastMessage = contact.messages[0];\r\n\r\n  const markAsRead = () => {\r\n    postMarkChatAsRead(contact._id, contact.contactUser._id).then(res => {\r\n      if (res && res.success) {\r\n        forceReload()\r\n      }\r\n    }).catch(err => err)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"border-bottom h-50px px-3 pt-cursor row\"\r\n      onClick={() => {\r\n        setSelectedContactId(contact.contactUser._id);\r\n        setShowUnread(false);\r\n        markAsRead()\r\n      }}\r\n    >\r\n      <div className=\"col\">\r\n        <div className=\"row mt-2\">\r\n          <div className=\"col\">\r\n            <b>{contact.contactUser.username}</b>\r\n          </div>\r\n          {showUnread && contact.unread > 0 && (\r\n            <div\r\n              className=\"d-flex justify-content-center col-3 more-rounded bg-white fw-bold\"\r\n              style={{ width: \"40px\" }}\r\n            >\r\n              {contact.unread}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"row text-muted\">\r\n          <div className=\"col-md\">\r\n            {lastMessage.senderId === userId ? \"You: \" : \"\"}{\" \"}\r\n            {lastMessage.message}\r\n          </div>\r\n          <div className=\"col-md-3 fw-light mt-1\" style={{ fontSize: \"12px\" }}>\r\n            {betterTime(lastMessage.sendAt)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatTile;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { ChatContext } from \"../Loading/ResourcePreLoad\";\r\nimport ChatDisplay from \"./ChatDisplay\";\r\nimport { ChatIdContext, UserIdContext } from \"../../App\";\r\nimport { betterTime } from \"../../utilities/betterDate\";\r\nimport ChatTile from \"./ChatTile\";\r\n\r\nfunction ChatPage() {\r\n  const userId = useContext(UserIdContext);\r\n  const { externChatId, setExternChatId } = useContext(ChatIdContext);\r\n\r\n  const { chatData } = useContext(ChatContext);\r\n  const [sortedChatList, setSortedChatList] = useState([]);\r\n  const [filteredChatData, setFilteredChatData] = useState([]);\r\n  const [filterInput, setFilterInput] = useState(\"\");\r\n  const [selectedContactId, setSelectedContactId] = useState(\r\n    externChatId?.contactUser._id\r\n  );\r\n\r\n  const filterContact = () => {\r\n    let filteredList = sortedChatList.filter((chatId) =>\r\n      chatData[chatId].contactUser.username.match(\r\n        new RegExp(filterInput, \"gmi\")\r\n      )\r\n    );\r\n    setFilteredChatData([...filteredList]);\r\n  };\r\n\r\n  const makeSortedChatList = () => {\r\n    let sortedList = Object.keys(chatData);\r\n    sortedList.sort((x, y) => {\r\n      let xdate = new Date(chatData[x].messages[0].sendAt);\r\n      let ydate = new Date(chatData[y].messages[0].sendAt);\r\n      if (xdate > ydate) return -1;\r\n      else if (xdate < ydate) return 1;\r\n      return 0;\r\n    });\r\n    setSortedChatList([...sortedList]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    makeSortedChatList();\r\n  }, [chatData]);\r\n\r\n  useEffect(() => {\r\n    filterContact();\r\n  }, [sortedChatList, filterInput]);\r\n\r\n  return (\r\n    <div className=\"row p-0 m-0 h-100\">\r\n      <div\r\n        className=\"col-md-2 p-0 m-0 h-100 border-end\"\r\n        style={{ minWidth: \"195px\" }}\r\n      >\r\n        <input\r\n          className=\"form-control border-0 h-50px\"\r\n          placeholder=\"Search User\"\r\n          onChange={(e) => setFilterInput(e.target.value)}\r\n        />\r\n        <div className=\"border-top\">\r\n          {filteredChatData.map((contactId) => (\r\n            <ChatTile\r\n              key={contactId}\r\n              contact={chatData[contactId]}\r\n              setSelectedContactId={setSelectedContactId}\r\n              userId={userId}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      {selectedContactId ? (\r\n        <ChatDisplay\r\n          contactUserChatData={\r\n            chatData[selectedContactId] === undefined\r\n              ? externChatId\r\n              : chatData[selectedContactId]\r\n          }\r\n          className=\"col-md h-100 bg-white shadow-left\"\r\n        />\r\n      ) : (\r\n        <div className=\"col-md h-100 bg-white shadow-left\" />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatPage;\r\n","import React from 'react'\r\n\r\nfunction TaskPage() {\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TaskPage\r\n","function Logout() {\r\n  localStorage.removeItem(\"token\");\r\n  window.location.href = \"/\";\r\n}\r\n\r\nexport default Logout;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Link, useLocation, useRouteMatch } from \"react-router-dom\";\r\nimport Logout from \"../Auth/Logout\";\r\n\r\nconst pages = [\r\n  {\r\n    name: \"Groups\",\r\n    icon: <i className=\"bi bi-collection\"></i>,\r\n    link: \"/groups\",\r\n  },\r\n  {\r\n    name: \"Chats\",\r\n    icon: <i className=\"bi bi-chat-right-text\"></i>,\r\n    link: \"/chats\",\r\n  },\r\n  {\r\n    name: \"Memo\",\r\n    icon: <i className=\"bi bi-journal-bookmark-fill\"></i>,\r\n    link: \"/memo\",\r\n  },\r\n];\r\n\r\nfunction NavigationBar({ className = \"\", style = \"\" }) {\r\n  const [selectedPageLink, setSelectedPageLink] = useState(\"\");\r\n  let location = useLocation();\r\n  return (\r\n    <div\r\n      className={`${className} vh-100 d-flex flex-column justify-content-center  border-end px-2`}\r\n      style={{ ...style }}\r\n    >\r\n      {pages.map((page) => (\r\n        <Link\r\n          to={page.link}\r\n          key={page.link}\r\n          onClick={() => setSelectedPageLink(page.link)}\r\n          className={`fs-5 d-flex flex-column justify-content-center my-1 p-1 ${\r\n            page.link === \"/\" + location.pathname.split(\"/\")[1]\r\n              ? \"selected-tag\"\r\n              : \"text-muted\"\r\n          }`}\r\n        >\r\n          <div className=\"m-auto text-center fs-4\">\r\n            <div>{page.icon}</div>\r\n            <div className=\"fs-6\">{page.name}</div>\r\n          </div>\r\n        </Link>\r\n      ))}\r\n      <div className=\"pt-cursor text-center fs-4 mt-auto mb-3\" onClick={() => Logout()}>\r\n        <div><i className=\"bi bi-box-arrow-right\"></i></div>\r\n        <div className=\"fs-6\">Logout</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavigationBar;\r\n","import React from 'react'\r\n\r\nfunction MemoPage() {\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MemoPage\r\n","import React, { useState, createContext } from \"react\";\r\nimport Login from \"./components/Auth/Login\";\r\n\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport PrivateRoute from \"./components/Auth/PrivateRoute\";\r\nimport GroupPage from \"./components/Groups/GroupPage\";\r\nimport ChatPage from \"./components/Chat/ChatPage\";\r\nimport TaskPage from \"./components/Tasks/TaskPage\";\r\nimport ResourcePreLoad from \"./components/Loading/ResourcePreLoad\";\r\nimport NavigationBar from \"./components/NavigationBar/NavigationBar\";\r\nimport MemoPage from \"./components/Memo/MemoPage\";\r\n\r\nexport const UserIdContext = createContext(\"\");\r\nexport const ChatIdContext = createContext(\"\");\r\n\r\nfunction App() {\r\n  const [userId, setUserId] = useState(\"\" || localStorage.getItem(\"userId\"));\r\n  const [userToken, setUserToken] = useState(\r\n    \"\" || localStorage.getItem(\"token\")\r\n  );\r\n\r\n  const [externChatId, setExternChatId] = useState(null)\r\n  \r\n  return (\r\n    <UserIdContext.Provider value={userId}>\r\n      <div className=\"fluid-container max-vh-100\">\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/login\">\r\n              <Login setUserToken={setUserToken} setUserId={setUserId} />\r\n            </Route>\r\n            <PrivateRoute userToken={userToken}>\r\n              <ResourcePreLoad>\r\n                <ChatIdContext.Provider value={{externChatId, setExternChatId}}>\r\n                <div className=\"row p-0 m-0 vh-100\">\r\n                  <NavigationBar\r\n                    className=\"col-md-1 h-100 m-0 p-0 bg-white shadow\"\r\n                    style={{ width: \"100px\", zIndex: 999 }}\r\n                  />\r\n                  <div className=\"col h-100 m-0 p-0 app-bg\">\r\n                    <Route path=\"/groups\">\r\n                      <GroupPage />\r\n                    </Route>\r\n                    <Route path=\"/chats\">\r\n                      <ChatPage />\r\n                    </Route>\r\n                    <Route path=\"/tasks\">\r\n                      <TaskPage />\r\n                    </Route>\r\n                    <Route path=\"/memo\">\r\n                      <MemoPage />\r\n                    </Route>\r\n                  </div>\r\n                </div>\r\n                </ChatIdContext.Provider>\r\n              </ResourcePreLoad>\r\n            </PrivateRoute>\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    </UserIdContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","module.exports.serverURL = \"https://teams-collab-backend.herokuapp.com\"\r\nmodule.exports.wsserverURL = \"wss://teams-collab-ws.herokuapp.com\"\r\n\r\n// module.exports.serverURL = \"http://localhost:8080\";\r\n// module.exports.wsserverURL = \"ws://localhost:8000\";\r\n\r\n// module.exports = \"http://localhost:5000\""],"sourceRoot":""}